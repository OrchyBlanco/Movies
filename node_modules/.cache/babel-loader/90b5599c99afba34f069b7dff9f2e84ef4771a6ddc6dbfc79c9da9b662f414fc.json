{"ast":null,"code":"import _slicedToArray from\"C:/Web Projects/Movies/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import InfiniteScroll from\"react-infinite-scroll-component\";import{get}from\"../utils/httpCliente\";import{MovieCard}from\"./MovieCard\";import{Spinner}from\"./Spinner\";import{Empty}from\"./Empty\";import style from\"./style/MoviesGrid.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";export function MoviesGrid(_ref){var search=_ref.search;//console.log(movies);\n// Hook de react para devolver el array de peliculas\n// const moviesState = useState([]);\n//Variable donde guardaremos las Peliculas recibidas del Fetch\n//const movies=moviesState[0];\n//Funcion para poder acceder a las peliculas\n// const setMovies = moviesState[1];\n//Mismo codigo de las lineas 9 a 14\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),page=_useState6[0],setPage=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),hasMore=_useState8[0],setHasMore=_useState8[1];//Estado en el que comprobamos que tenemos + peliculas\n//Solicitud asincrona a la API.\nuseEffect(function(){setIsLoading(true);var searchUrl=search?\"/search/movie?query=\"+search+\"&page=\"+page:\"/discover/movie?page=\"+page;get(searchUrl).then(function(data){setMovies(function(prevMovies){return prevMovies.concat(data.results);});//Concatenamos las peliculas anteriores con las nuevas que recibimos\nsetHasMore(data.page<data.total_pages);// Si la pagina actual es menor que el total de paginas continual el INFINITE SCROLL\nsetIsLoading(false);});},[search,page]);// !!IMPORTANTE!!! AÑADIR ARRAY PARA EVITAR BUCLES INFINITOS\nif(!isLoading&&movies.length===0){return/*#__PURE__*/_jsx(Empty,{});}return/*#__PURE__*/_jsx(InfiniteScroll,{dataLength:movies.length,hasMore:hasMore,next:function next(){return setPage(function(prevPage){return prevPage+1;});},loader:/*#__PURE__*/_jsx(Spinner,{})//Añadimos el Spinner aqui para evitar que carge encima de las paginas\n,children:/*#__PURE__*/_jsx(\"ul\",{className:style.MovieGrid,children:movies.map(function(movie){return/*#__PURE__*/_jsx(MovieCard,{movie:movie},movie.id);})})});}","map":{"version":3,"names":["useEffect","useState","InfiniteScroll","get","MovieCard","Spinner","Empty","style","jsx","_jsx","MoviesGrid","_ref","search","_useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","page","setPage","_useState7","_useState8","hasMore","setHasMore","searchUrl","then","data","prevMovies","concat","results","total_pages","length","dataLength","next","prevPage","loader","children","className","MovieGrid","map","movie","id"],"sources":["C:/Web Projects/Movies/src/components/MoviesGrid.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport { get } from \"../utils/httpCliente\";\r\nimport { MovieCard } from \"./MovieCard\";\r\nimport { Spinner } from \"./Spinner\";\r\nimport { Empty } from \"./Empty\";\r\n\r\nimport style from \"./style/MoviesGrid.module.css\";\r\n\r\nexport function MoviesGrid({ search }) {\r\n  //console.log(movies);\r\n\r\n  // Hook de react para devolver el array de peliculas\r\n  // const moviesState = useState([]);\r\n  //Variable donde guardaremos las Peliculas recibidas del Fetch\r\n  //const movies=moviesState[0];\r\n  //Funcion para poder acceder a las peliculas\r\n  // const setMovies = moviesState[1];\r\n\r\n  //Mismo codigo de las lineas 9 a 14\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true); //Estado en el que comprobamos que tenemos + peliculas\r\n\r\n  //Solicitud asincrona a la API.\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    const searchUrl = search\r\n      ? \"/search/movie?query=\" + search + \"&page=\" + page\r\n      : \"/discover/movie?page=\" + page;\r\n\r\n    get(searchUrl).then((data) => {\r\n      setMovies((prevMovies) => prevMovies.concat(data.results)); //Concatenamos las peliculas anteriores con las nuevas que recibimos\r\n      setHasMore(data.page < data.total_pages); // Si la pagina actual es menor que el total de paginas continual el INFINITE SCROLL\r\n      setIsLoading(false);\r\n    });\r\n  }, [search, page]); // !!IMPORTANTE!!! AÑADIR ARRAY PARA EVITAR BUCLES INFINITOS\r\n\r\n  if (!isLoading && movies.length === 0) {\r\n    return <Empty />;\r\n  }\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={movies.length}\r\n      hasMore={hasMore}\r\n      next={() => setPage((prevPage) => prevPage + 1)}\r\n      loader={<Spinner />} //Añadimos el Spinner aqui para evitar que carge encima de las paginas\r\n    >\r\n      <ul className={style.MovieGrid}>\r\n        {movies.map((movie) => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </ul>\r\n    </InfiniteScroll>\r\n  );\r\n}\r\n"],"mappings":"4GAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,cAAc,KAAM,iCAAiC,CAE5D,OAASC,GAAG,KAAQ,sBAAsB,CAC1C,OAASC,SAAS,KAAQ,aAAa,CACvC,OAASC,OAAO,KAAQ,WAAW,CACnC,OAASC,KAAK,KAAQ,SAAS,CAE/B,MAAO,CAAAC,KAAK,KAAM,+BAA+B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElD,MAAO,SAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAa,IAAV,CAAAC,MAAM,CAAAD,IAAA,CAANC,MAAM,CACjC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,IAAAC,SAAA,CAA4BZ,QAAQ,CAAC,EAAE,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IACxB,IAAAI,UAAA,CAAkCjB,QAAQ,CAAC,IAAI,CAAC,CAAAkB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAzCE,SAAS,CAAAD,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAC9B,IAAAG,UAAA,CAAwBrB,QAAQ,CAAC,CAAC,CAAC,CAAAsB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA5BE,IAAI,CAAAD,UAAA,IAAEE,OAAO,CAAAF,UAAA,IACpB,IAAAG,UAAA,CAA8BzB,QAAQ,CAAC,IAAI,CAAC,CAAA0B,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAArCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAAoB;AAE9C;AACA3B,SAAS,CAAC,UAAM,CACdqB,YAAY,CAAC,IAAI,CAAC,CAElB,GAAM,CAAAS,SAAS,CAAGlB,MAAM,CACpB,sBAAsB,CAAGA,MAAM,CAAG,QAAQ,CAAGY,IAAI,CACjD,uBAAuB,CAAGA,IAAI,CAElCrB,GAAG,CAAC2B,SAAS,CAAC,CAACC,IAAI,CAAC,SAACC,IAAI,CAAK,CAC5Bf,SAAS,CAAC,SAACgB,UAAU,QAAK,CAAAA,UAAU,CAACC,MAAM,CAACF,IAAI,CAACG,OAAO,CAAC,GAAC,CAAE;AAC5DN,UAAU,CAACG,IAAI,CAACR,IAAI,CAAGQ,IAAI,CAACI,WAAW,CAAC,CAAE;AAC1Cf,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAAC,CACJ,CAAC,CAAE,CAACT,MAAM,CAAEY,IAAI,CAAC,CAAC,CAAE;AAEpB,GAAI,CAACJ,SAAS,EAAIJ,MAAM,CAACqB,MAAM,GAAK,CAAC,CAAE,CACrC,mBAAO5B,IAAA,CAACH,KAAK,IAAG,CAClB,CAEA,mBACEG,IAAA,CAACP,cAAc,EACboC,UAAU,CAAEtB,MAAM,CAACqB,MAAO,CAC1BT,OAAO,CAAEA,OAAQ,CACjBW,IAAI,CAAE,SAAAA,KAAA,QAAM,CAAAd,OAAO,CAAC,SAACe,QAAQ,QAAK,CAAAA,QAAQ,CAAG,CAAC,GAAC,EAAC,CAChDC,MAAM,cAAEhC,IAAA,CAACJ,OAAO,IAAK;AAAA,CAAAqC,QAAA,cAErBjC,IAAA,OAAIkC,SAAS,CAAEpC,KAAK,CAACqC,SAAU,CAAAF,QAAA,CAC5B1B,MAAM,CAAC6B,GAAG,CAAC,SAACC,KAAK,qBAChBrC,IAAA,CAACL,SAAS,EAAgB0C,KAAK,CAAEA,KAAM,EAAvBA,KAAK,CAACC,EAAE,CAAkB,EAC3C,CAAC,EACC,EACU,CAErB"},"metadata":{},"sourceType":"module","externalDependencies":[]}